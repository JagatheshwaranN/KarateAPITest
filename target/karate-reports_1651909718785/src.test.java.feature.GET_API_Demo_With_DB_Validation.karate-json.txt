{"failedCount":1,"prefixedPath":"src\/test\/java\/feature\/GET_API_Demo_With_DB_Validation.feature","packageQualifiedName":"src.test.java.feature.GET_API_Demo_With_DB_Validation","loopIndex":-1,"relativePath":"src\/test\/java\/feature\/GET_API_Demo_With_DB_Validation.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":1493600,"millis":1.4936,"status":"passed"},"step":{"line":10,"prefix":"Given","index":0,"text":"url 'http:\/\/localhost:8080\/getcountry\/4'"},"stepLog":"13:14:29.293 karate.env system property is ===>>  null \n"},{"result":{"nanos":1177554300,"millis":1177.5543,"status":"passed"},"step":{"line":11,"prefix":"When","index":1,"text":"method GET"},"stepLog":"13:14:30.444 request:\n1 > GET http:\/\/localhost:8080\/getcountry\/4\n1 > Host: localhost:8080\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/1.8.0_201)\n1 > Accept-Encoding: gzip,deflate\n\n\n13:14:30.510 response time in milliseconds: 62\n1 < 302\n1 < Content-Type: application\/json\n1 < Transfer-Encoding: chunked\n1 < Date: Sat, 07 May 2022 07:44:30 GMT\n1 < Keep-Alive: timeout=60\n1 < Connection: keep-alive\n{\"countryId\":4,\"countryName\":\"Japan\",\"countryCapital\":\"Tokyo\",\"countryPopulation\":126038800,\"countryStates\":47,\"countryLanguage\":\"Japanese\",\"countrySport\":\"Sumo\"}\n"},{"result":{"nanos":22400,"millis":0.0224,"status":"passed"},"step":{"line":12,"prefix":"Then","index":2,"text":"status 302"}},{"result":{"nanos":9617900,"millis":9.6179,"status":"passed"},"step":{"line":13,"prefix":"And","index":3,"text":"print response"},"stepLog":"13:14:30.594 [print] {\n  \"countryId\": 4,\n  \"countryName\": \"Japan\",\n  \"countryCapital\": \"Tokyo\",\n  \"countryPopulation\": 126038800,\n  \"countryStates\": 47,\n  \"countryLanguage\": \"Japanese\",\n  \"countrySport\": \"Sumo\"\n}\n \n"},{"result":{"nanos":54928500,"millis":54.9285,"status":"passed"},"step":{"line":14,"prefix":"And","index":4,"text":"match response.countryId == 4"}},{"result":{"nanos":2202600,"millis":2.2026,"status":"passed"},"step":{"line":15,"prefix":"*","index":5,"text":"def config = { username: 'root', password: 'root', url: 'jdbc:mysql:\/\/127.0.0.1:3306\/mydatabase', driverClassName: 'com.mysql.cj.jdbc.Driver' }"}},{"result":{"nanos":18269000,"millis":18.269,"status":"passed"},"step":{"line":16,"prefix":"*","index":6,"text":"def DbUtils = Java.type('util.DBUtils')"}},{"result":{"nanos":86417700,"millis":86.4177,"status":"passed"},"step":{"line":17,"prefix":"*","index":7,"text":"def db = new DbUtils(config)"}},{"result":{"nanos":23486800,"errorMessage":"js failed:\n>>>>\n01: db.readRow('Select * from COUNTRY where CTRY_ID=4;')\n<<<<\norg.graalvm.polyglot.PolyglotException: No DataSource set\n- org.springframework.util.Assert.state(Assert.java:76)\n- org.springframework.jdbc.support.JdbcAccessor.obtainDataSource(JdbcAccessor.java:86)\n- org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:376)\n- org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:465)\n- org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:475)\n- org.springframework.jdbc.core.JdbcTemplate.queryForObject(JdbcTemplate.java:508)\n- org.springframework.jdbc.core.JdbcTemplate.queryForMap(JdbcTemplate.java:502)\n\nsrc\/test\/java\/feature\/GET_API_Demo_With_DB_Validation.feature:18","millis":23.4868,"status":"failed"},"step":{"line":18,"prefix":"*","index":8,"text":"def country = db.readRow('Select * from COUNTRY where CTRY_ID=4;')"},"stepLog":"13:14:30.781 src\/test\/java\/feature\/GET_API_Demo_With_DB_Validation.feature:18\n* def country = db.readRow('Select * from COUNTRY where CTRY_ID=4;')\njs failed:\n>>>>\n01: db.readRow('Select * from COUNTRY where CTRY_ID=4;')\n<<<<\norg.graalvm.polyglot.PolyglotException: No DataSource set\n- org.springframework.util.Assert.state(Assert.java:76)\n- org.springframework.jdbc.support.JdbcAccessor.obtainDataSource(JdbcAccessor.java:86)\n- org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:376)\n- org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:465)\n- org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:475)\n- org.springframework.jdbc.core.JdbcTemplate.queryForObject(JdbcTemplate.java:508)\n- org.springframework.jdbc.core.JdbcTemplate.queryForMap(JdbcTemplate.java:502)\n\nsrc\/test\/java\/feature\/GET_API_Demo_With_DB_Validation.feature:18\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":19,"prefix":"*","index":9,"text":"print country"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":20,"prefix":"*","index":10,"text":"match country.CTRY_NAME == 'Japan'"}}],"line":9,"description":"","durationMillis":1373.9928,"failed":true,"error":"js failed:\n>>>>\n01: db.readRow('Select * from COUNTRY where CTRY_ID=4;')\n<<<<\norg.graalvm.polyglot.PolyglotException: No DataSource set\n- org.springframework.util.Assert.state(Assert.java:76)\n- org.springframework.jdbc.support.JdbcAccessor.obtainDataSource(JdbcAccessor.java:86)\n- org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:376)\n- org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:465)\n- org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:475)\n- org.springframework.jdbc.core.JdbcTemplate.queryForObject(JdbcTemplate.java:508)\n- org.springframework.jdbc.core.JdbcTemplate.queryForMap(JdbcTemplate.java:502)\n\nsrc\/test\/java\/feature\/GET_API_Demo_With_DB_Validation.feature:18","executorName":"main","name":"Verify automation of Get Country API and validate the response with DB data","startTime":1651909468878,"refId":"[1:9]","endTime":1651909470781,"exampleIndex":-1}],"callDepth":0,"name":"Automation of GET API","description":"","resultDate":"2022-05-07 01:14:30 PM","durationMillis":1373.9928,"passedCount":0}