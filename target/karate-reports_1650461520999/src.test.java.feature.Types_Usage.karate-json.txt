{"failedCount":1,"prefixedPath":"src\/test\/java\/feature\/Types_Usage.feature","packageQualifiedName":"src.test.java.feature.Types_Usage","loopIndex":-1,"relativePath":"src\/test\/java\/feature\/Types_Usage.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":2051600,"millis":2.0516,"status":"passed"},"step":{"line":4,"prefix":"Given","index":0,"text":"def val = '10'"},"stepLog":"19:01:27.864 karate.env system property is ===>>  null \n"},{"result":{"nanos":98422800,"millis":98.4228,"status":"passed"},"step":{"line":5,"prefix":"When","index":1,"text":"string json = {bar:'#(parseInt(val))'}"}},{"result":{"nanos":20463100,"millis":20.4631,"status":"passed"},"step":{"line":6,"prefix":"Then","index":2,"text":"match json == '{\"bar\":10}'"}},{"result":{"nanos":18744300,"millis":18.7443,"status":"passed"},"step":{"line":7,"prefix":"When","index":3,"text":"string json = {bar:'#(1*val)'}"}},{"result":{"nanos":813900,"millis":0.8139,"status":"passed"},"step":{"line":8,"prefix":"Then","index":4,"text":"match json == '{\"bar\":10}'"}},{"result":{"nanos":4126600,"millis":4.1266,"status":"passed"},"step":{"line":9,"prefix":"When","index":5,"text":"string json = {bar:'#(~~val)'}"}},{"result":{"nanos":1072500,"millis":1.0725,"status":"passed"},"step":{"line":10,"prefix":"Then","index":6,"text":"match json == '{\"bar\":10}'"}}],"executorName":"main","line":3,"name":"Verify the usage of the Types features (Str to Integer)","description":"","durationMillis":145.6948,"startTime":1650461487553,"failed":false,"refId":"[1:3]","endTime":1650461488085,"exampleIndex":-1},{"sectionIndex":1,"stepResults":[{"result":{"nanos":1046000,"millis":1.046,"status":"passed"},"step":{"line":13,"prefix":"Given","index":0,"text":"def val = '100'"},"stepLog":"19:01:28.098 karate.env system property is ===>>  null \n"},{"result":{"nanos":4391300,"millis":4.3913,"status":"passed"},"step":{"line":14,"prefix":"When","index":1,"text":"string json = {bar:'#(val*0.1)'}"}},{"result":{"nanos":1286000,"millis":1.286,"status":"passed"},"step":{"line":15,"prefix":"Then","index":2,"text":"match json == '{\"bar\":10.0}'"}},{"result":{"nanos":1727200,"millis":1.7272,"status":"passed"},"step":{"line":16,"prefix":"When","index":3,"text":"string json = {bar:'#(~~(val*0.1))'}"}},{"result":{"nanos":2788900,"millis":2.7889,"status":"passed"},"step":{"line":17,"prefix":"Then","index":4,"text":"match json == '{\"bar\":10}'"}}],"executorName":"main","line":12,"name":"Verify the usage of the Types features (Str to Float)","description":"","durationMillis":11.2394,"startTime":1650461488094,"failed":false,"refId":"[2:12]","endTime":1650461488113,"exampleIndex":-1},{"sectionIndex":2,"stepResults":[{"result":{"nanos":1420700,"millis":1.4207,"status":"passed"},"step":{"line":20,"prefix":"Given","index":0,"text":"def big = 123123123123"},"stepLog":"19:01:28.124 karate.env system property is ===>>  null \n"},{"result":{"nanos":1457200,"millis":1.4572,"status":"passed"},"step":{"line":21,"prefix":"When","index":1,"text":"string json = {num:'#(big)'}"}},{"result":{"nanos":1182000,"millis":1.182,"status":"passed"},"step":{"line":22,"prefix":"Then","index":2,"text":"match json == '{\"num\":1.23123123123E11}'"}},{"result":{"nanos":46092000,"millis":46.092,"status":"passed"},"step":{"line":23,"prefix":"Given","index":3,"text":"def big = new java.math.BigDecimal(123123123123)"}},{"result":{"nanos":6606300,"millis":6.6063,"status":"passed"},"step":{"line":24,"prefix":"When","index":4,"text":"string json = {num:'#(big)'}"}},{"result":{"nanos":1117500,"millis":1.1175,"status":"passed"},"step":{"line":25,"prefix":"Then","index":5,"text":"match json == '{\"num\":123123123123}'"}}],"executorName":"main","line":19,"name":"Verify the usage of the Types features (Str to Large Number)","description":"","durationMillis":57.8757,"startTime":1650461488123,"failed":false,"refId":"[3:19]","endTime":1650461488184,"exampleIndex":-1},{"sectionIndex":3,"stepResults":[{"result":{"nanos":1498700,"millis":1.4987,"status":"passed"},"step":{"endLine":36,"line":28,"prefix":"Given","docString":"{\ntype:'2wheeler',\ncollection:[\n{brand:'Hero',model:'Splender'},\n{brand:'Bajaj',model:'Pulser'}]\n}","index":0,"text":"def bike ="},"stepLog":"19:01:28.193 karate.env system property is ===>>  null \n"},{"result":{"nanos":42754600,"millis":42.7546,"status":"passed"},"step":{"line":37,"prefix":"*","index":1,"text":"def bob = get[0] bike.collection[?(@.brand=='Hero')]"}},{"result":{"nanos":1289600,"millis":1.2896,"status":"passed"},"step":{"line":38,"prefix":"*","index":2,"text":"match bob.model == 'Splender'"}},{"result":{"nanos":61385300,"millis":61.3853,"status":"passed"},"step":{"line":39,"prefix":"*","index":3,"text":"def temp = karate.jsonPath(bike,\"$.collection[?(@.model=='\"+bob.model+\"')]\")"}},{"result":{"nanos":6710900,"millis":6.7109,"status":"passed"},"step":{"line":40,"prefix":"*","index":4,"text":"match temp[0] == bob"}},{"result":{"nanos":4253200,"millis":4.2532,"status":"passed"},"step":{"line":41,"prefix":"*","index":5,"text":"def temp = karate.jsonPath(bike,\"$.collection[?(@.model=='\"+bob.model+\"')]\")[0]"}},{"result":{"nanos":713500,"millis":0.7135,"status":"passed"},"step":{"line":42,"prefix":"*","index":6,"text":"match temp == bob"}}],"executorName":"main","line":27,"name":"Verify the usage of the Types feature (JsonPath Filters)","description":"","durationMillis":118.6058,"startTime":1650461488192,"failed":false,"refId":"[4:27]","endTime":1650461488313,"exampleIndex":-1},{"sectionIndex":4,"stepResults":[{"result":{"nanos":1402300,"millis":1.4023,"status":"passed"},"step":{"line":45,"prefix":"Given","index":0,"text":"def fun = function(x){return x * x}"},"stepLog":"19:01:28.321 karate.env system property is ===>>  null \n"},{"result":{"nanos":327500,"millis":0.3275,"status":"passed"},"step":{"line":46,"prefix":"When","index":1,"text":"def list = [1, 2, 3]"}},{"result":{"nanos":4394600,"millis":4.3946,"status":"passed"},"step":{"line":47,"prefix":"And","index":2,"text":"def result = karate.map(list, fun)"}},{"result":{"nanos":476300,"millis":0.4763,"status":"passed"},"step":{"line":48,"prefix":"Then","index":3,"text":"match result == [1, 4, 9]"}}],"executorName":"main","line":44,"name":"Verify the usage of the Types feature (Karate map operation)","description":"","durationMillis":6.6007,"startTime":1650461488320,"failed":false,"refId":"[5:44]","endTime":1650461488330,"exampleIndex":-1},{"sectionIndex":5,"stepResults":[{"result":{"nanos":350200,"millis":0.3502,"status":"passed"},"step":{"line":51,"prefix":"Given","index":0,"text":"def before = [{circle:1}, {circle:2}]"},"stepLog":"19:01:28.337 karate.env system property is ===>>  null \n"},{"result":{"nanos":1091900,"millis":1.0919,"status":"passed"},"step":{"line":52,"prefix":"When","index":1,"text":"def fun = function(x){ return { square:x.circle}}"}},{"result":{"nanos":5082300,"millis":5.0823,"status":"passed"},"step":{"line":53,"prefix":"And","index":2,"text":"def after = karate.map(before, fun)"}},{"result":{"nanos":438300,"millis":0.4383,"status":"passed"},"step":{"line":54,"prefix":"Then","index":3,"text":"match after == [{square:1},{square:2}]"}}],"executorName":"main","line":50,"name":"Verify the usage of the Types feature (Karate map operation)","description":"","durationMillis":6.9627,"startTime":1650461488336,"failed":false,"refId":"[6:50]","endTime":1650461488346,"exampleIndex":-1},{"sectionIndex":6,"stepResults":[{"result":{"nanos":425300,"millis":0.4253,"status":"passed"},"step":{"line":57,"prefix":"Given","index":0,"text":"def list = ['john','alex']"},"stepLog":"19:01:28.355 karate.env system property is ===>>  null \n"},{"result":{"nanos":3918300,"millis":3.9183,"status":"passed"},"step":{"line":58,"prefix":"When","index":1,"text":"def data = karate.mapWithKey(list,'name')"}},{"result":{"nanos":545400,"millis":0.5454,"status":"passed"},"step":{"line":59,"prefix":"Then","index":2,"text":"match data == [{name:'john'},{name:'alex'}]"}}],"executorName":"main","line":56,"name":"Verify the usage of the Types feature (Karate map operation)","description":"","durationMillis":4.889,"startTime":1650461488354,"failed":false,"refId":"[7:56]","endTime":1650461488365,"exampleIndex":-1},{"sectionIndex":7,"stepResults":[{"result":{"nanos":887000,"millis":0.887,"status":"passed"},"step":{"line":62,"prefix":"Given","index":0,"text":"def list = [1, 2, 3, 4]"},"stepLog":"19:01:28.375 karate.env system property is ===>>  null \n"},{"result":{"nanos":4929000,"millis":4.929,"status":"passed"},"step":{"line":63,"prefix":"When","index":1,"text":"def fun = function(x){ return x%2==0}"}},{"result":{"nanos":2613700,"millis":2.6137,"status":"passed"},"step":{"line":64,"prefix":"Then","index":2,"text":"def result = karate.filter(list,fun)"}},{"result":{"nanos":348800,"millis":0.3488,"status":"passed"},"step":{"line":65,"prefix":"And","index":3,"text":"match result == [2, 4]"}}],"executorName":"main","line":61,"name":"Verify the usage of the Types feature (Karate filter operation)","description":"","durationMillis":8.7785,"startTime":1650461488374,"failed":false,"refId":"[8:61]","endTime":1650461488385,"exampleIndex":-1},{"sectionIndex":8,"stepResults":[{"result":{"nanos":244300,"millis":0.2443,"status":"passed"},"step":{"line":68,"prefix":"Given","index":0,"text":"def keys = []"},"stepLog":"19:01:28.393 karate.env system property is ===>>  null \n"},{"result":{"nanos":205400,"millis":0.2054,"status":"passed"},"step":{"line":69,"prefix":"And","index":1,"text":"def vals = []"}},{"result":{"nanos":230800,"millis":0.2308,"status":"passed"},"step":{"line":70,"prefix":"And","index":2,"text":"def pos = []"}},{"result":{"nanos":1566700,"millis":1.5667,"status":"passed"},"step":{"endLine":78,"line":71,"prefix":"Given","docString":"function(x, y, z){\nkarate.appendTo(keys,x);\nkarate.appendTo(vals,y);\nkarate.appendTo(pos,z);\n}","index":3,"text":"def fun ="}},{"result":{"nanos":277100,"millis":0.2771,"status":"passed"},"step":{"line":79,"prefix":"Given","index":4,"text":"def map = {a:2, b:4, c:6}"}},{"result":{"nanos":4914700,"millis":4.9147,"status":"passed"},"step":{"line":80,"prefix":"When","index":5,"text":"karate.forEach(map,fun)"}},{"result":{"nanos":399500,"millis":0.3995,"status":"passed"},"step":{"line":81,"prefix":"Then","index":6,"text":"match keys == ['a', 'b', 'c']"}},{"result":{"nanos":850200,"millis":0.8502,"status":"passed"},"step":{"line":82,"prefix":"Then","index":7,"text":"match vals == [2, 4, 6]"}},{"result":{"nanos":347600,"millis":0.3476,"status":"passed"},"step":{"line":83,"prefix":"Then","index":8,"text":"match pos == [0, 1 , 2]"}}],"executorName":"main","line":67,"name":"Verify the usage of the Types feature (Karate forEach operation)","description":"","durationMillis":9.0363,"startTime":1650461488392,"failed":false,"refId":"[9:67]","endTime":1650461488404,"exampleIndex":-1},{"sectionIndex":9,"stepResults":[{"result":{"nanos":320200,"millis":0.3202,"status":"passed"},"step":{"line":86,"prefix":"Given","index":0,"text":"def schema = {a:'#string',b:'#number',c:'#boolean'}"},"stepLog":"19:01:28.414 karate.env system property is ===>>  null \n"},{"result":{"nanos":307300,"millis":0.3073,"status":"passed"},"step":{"line":87,"prefix":"And","index":1,"text":"def response = {a:'apple',c:true}"}},{"result":{"nanos":2294700,"millis":2.2947,"status":"passed"},"step":{"line":88,"prefix":"When","index":2,"text":"match response == karate.filterKeys(schema,response)"}},{"result":{"nanos":4360800,"millis":4.3608,"status":"passed"},"step":{"line":89,"prefix":"Then","index":3,"text":"match karate.filterKeys(response, 'b', 'c') == {c:true}"}},{"result":{"nanos":8955900,"millis":8.9559,"status":"passed"},"step":{"line":90,"prefix":"Then","index":4,"text":"match karate.filterKeys(response, ['a','b']) == { a: 'apple'}"}}],"executorName":"main","line":85,"name":"Verify the usage of the Types feature (Karate filterKeys operation)","description":"","durationMillis":16.2389,"startTime":1650461488412,"failed":false,"refId":"[10:85]","endTime":1650461488432,"exampleIndex":-1},{"sectionIndex":10,"stepResults":[{"result":{"nanos":246800,"millis":0.2468,"status":"passed"},"step":{"line":93,"prefix":"Given","index":0,"text":"def list = {a:1}"},"stepLog":"19:01:28.438 karate.env system property is ===>>  null \n"},{"result":{"nanos":4114600,"millis":4.1146,"status":"passed"},"step":{"line":94,"prefix":"When","index":1,"text":"def list1 = karate.merge(list,{b:2})"}},{"result":{"nanos":399100,"millis":0.3991,"status":"passed"},"step":{"line":95,"prefix":"Then","index":2,"text":"match list1 == {a:1, b:2}"}}],"executorName":"main","line":92,"name":"Verify the usage of the Types feature (Karate merge operation)","description":"","durationMillis":4.7605,"startTime":1650461488437,"failed":false,"refId":"[11:92]","endTime":1650461488444,"exampleIndex":-1},{"sectionIndex":11,"stepResults":[{"result":{"nanos":297100,"millis":0.2971,"status":"passed"},"step":{"line":98,"prefix":"Given","index":0,"text":"def list = [{a:1}]"},"stepLog":"19:01:28.452 karate.env system property is ===>>  null \n"},{"result":{"nanos":237690200,"errorMessage":"js failed:\n>>>>\n01: karate.merge(list,[{b:2}])\n<<<<\norg.graalvm.polyglot.PolyglotException: Cannot convert '[{\"a\":1}]'(language: Java, type: com.intuit.karate.graal.JsList) to Java type 'java.util.Map': Value must have members, array elements or hash entries.\n- com.oracle.truffle.host.HostEngineException.classCast(HostEngineException.java:65)\n- com.oracle.truffle.host.HostInteropErrors.cannotConvert(HostInteropErrors.java:77)\n- com.oracle.truffle.host.HostToTypeNode.asJavaObject(HostToTypeNode.java:401)\n- com.oracle.truffle.host.HostToTypeNode.convertImpl(HostToTypeNode.java:194)\n- com.oracle.truffle.host.HostToTypeNode.doCached(HostToTypeNode.java:118)\n- com.oracle.truffle.host.HostToTypeNodeGen.execute(HostToTypeNodeGen.java:40)\n- com.oracle.truffle.host.HostLanguageService.toHostType(HostLanguageService.java:117)\n\nsrc\/test\/java\/feature\/Types_Usage.feature:99","millis":237.6902,"status":"failed"},"step":{"line":99,"prefix":"When","index":1,"text":"def list1 = karate.merge(list,[{b:2}])"},"stepLog":"19:01:28.692 src\/test\/java\/feature\/Types_Usage.feature:99\nWhen def list1 = karate.merge(list,[{b:2}])\njs failed:\n>>>>\n01: karate.merge(list,[{b:2}])\n<<<<\norg.graalvm.polyglot.PolyglotException: Cannot convert '[{\"a\":1}]'(language: Java, type: com.intuit.karate.graal.JsList) to Java type 'java.util.Map': Value must have members, array elements or hash entries.\n- com.oracle.truffle.host.HostEngineException.classCast(HostEngineException.java:65)\n- com.oracle.truffle.host.HostInteropErrors.cannotConvert(HostInteropErrors.java:77)\n- com.oracle.truffle.host.HostToTypeNode.asJavaObject(HostToTypeNode.java:401)\n- com.oracle.truffle.host.HostToTypeNode.convertImpl(HostToTypeNode.java:194)\n- com.oracle.truffle.host.HostToTypeNode.doCached(HostToTypeNode.java:118)\n- com.oracle.truffle.host.HostToTypeNodeGen.execute(HostToTypeNodeGen.java:40)\n- com.oracle.truffle.host.HostLanguageService.toHostType(HostLanguageService.java:117)\n\nsrc\/test\/java\/feature\/Types_Usage.feature:99\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":100,"prefix":"Then","index":2,"text":"match list1 == [{a:1}, {b:2}]"}}],"line":97,"description":"","durationMillis":237.9873,"failed":true,"error":"js failed:\n>>>>\n01: karate.merge(list,[{b:2}])\n<<<<\norg.graalvm.polyglot.PolyglotException: Cannot convert '[{\"a\":1}]'(language: Java, type: com.intuit.karate.graal.JsList) to Java type 'java.util.Map': Value must have members, array elements or hash entries.\n- com.oracle.truffle.host.HostEngineException.classCast(HostEngineException.java:65)\n- com.oracle.truffle.host.HostInteropErrors.cannotConvert(HostInteropErrors.java:77)\n- com.oracle.truffle.host.HostToTypeNode.asJavaObject(HostToTypeNode.java:401)\n- com.oracle.truffle.host.HostToTypeNode.convertImpl(HostToTypeNode.java:194)\n- com.oracle.truffle.host.HostToTypeNode.doCached(HostToTypeNode.java:118)\n- com.oracle.truffle.host.HostToTypeNodeGen.execute(HostToTypeNodeGen.java:40)\n- com.oracle.truffle.host.HostLanguageService.toHostType(HostLanguageService.java:117)\n\nsrc\/test\/java\/feature\/Types_Usage.feature:99","executorName":"main","name":"Verify the usage of the Types feature (Karate append operation)","startTime":1650461488451,"refId":"[12:97]","endTime":1650461488692,"exampleIndex":-1}],"callDepth":0,"name":"Types Usage Automation","description":"","resultDate":"2022-04-20 07:01:28 PM","durationMillis":628.6696,"passedCount":11}